services:
  postgres-db:
    profiles: ["linux"]
    image: postgres:15.4-alpine3.18
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]
    ports:
      - "5432:5432"
    volumes:
      - ./data/.postgres:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: pass

  postgres-db-mac:
    profiles: ["macos"]
    image: postgres:15.4
    ports:
      - "5432:5432"
    volumes:
      - ./data/.postgres:/var/lib/postgresql/data
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_PASSWORD: pass

  cassandra_db:
    image: cassandra:4.1.3
    container_name: cassandra
    ports:
      - "9042:9042"
    volumes:
      - ./data/.cassandra:/var/lib/cassandra
    environment:
      - MAX_HEAP_SIZE=256M
      - HEAP_NEWSIZE=128M
      - CASSANDRA_CLUSTER_NAME=cassandra-akka-cluster
    networks:
        - cassandra_network

  cassandra_temp:
    image: cassandra:4.1.3
    volumes:
      - ./cassandra/scripts/bash:/docker-entrypoint.sh
      - ./cassandra/scripts/cql:/tmp/cql
    networks:
      - cassandra_network
    command: >
      bash ./docker-entrypoint.sh/execute-cql.sh

#   localstack:
#     image: localstack/localstack
#     ports:
#       - "127.0.0.1:4566:4566"            # LocalStack Gateway
#       - "127.0.0.1:4510-4559:4510-4559"  # external services port range
#     environment:
#       - DEBUG=${DEBUG-}
#       - DOCKER_HOST=unix:///var/run/docker.sock
#     volumes:
#       - "./data/.localstack:/var/lib/localstack"
#       - "/var/run/docker.sock:/var/run/docker.sock"

  redpanda-0:
    profiles: ["local"]
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers'
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers'
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with eachother internally.
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      # Tells Seastar (the framework Redpanda uses under the hood) to use 1 core on the system.
      - --smp 1
      # The amount of memory to make available to Redpanda.
      - --memory 1G
      # Mode dev-container uses well-known configuration properties for development in containers.
      - --mode dev-container
      # enable logs for debugging.
      - --default-log-level=debug
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.2
    container_name: redpanda-0
    volumes:
      - ./data/.kafka:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  console:
    profiles: ["local"]
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.3.9
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - 8085:8080
    depends_on:
      - redpanda-0

networks:
  cassandra_network:

  redpanda_network:
    driver: bridge
